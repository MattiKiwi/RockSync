name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install build deps
        run: |
          pip install pyinstaller PySide6 mutagen Pillow requests beautifulsoup4 psutil musicbrainzngs lyricsgenius tqdm tidal-dl-ng

      - name: Build with PyInstaller
        run: pyinstaller rocksync.spec

      - name: Set package label (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: echo "PKG_LABEL=Ubuntu" >> $GITHUB_ENV

      - name: Set package label (macOS)
        if: matrix.os == 'macos-latest'
        run: echo "PKG_LABEL=macOS" >> $GITHUB_ENV

      - name: Package (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          set -euxo pipefail
          APPDIR="dist/RockSync"
          test -d "$APPDIR"
          : "${PKG_LABEL:=Linux}"
          TAR_NAME="RockSync-${GITHUB_REF_NAME}-${PKG_LABEL}.tar.gz"
          tar -C dist -czf "$TAR_NAME" RockSync
          echo "PACKAGE=$TAR_NAME" >> $GITHUB_ENV

      - name: Package (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          if (-not (Test-Path 'dist/RockSync')) { throw 'dist/RockSync not found' }
          $ZipName = "RockSync-$env:GITHUB_REF_NAME-Windows.zip"
          Compress-Archive -Path 'dist/RockSync' -DestinationPath $ZipName -Force
          echo "PACKAGE=$ZipName" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE }}
          path: ${{ env.PACKAGE }}
          if-no-files-found: error

  release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: [build, build-debian, build-fedora]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List artifacts
        run: find artifacts -type f -maxdepth 2 -print

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/*.zip
            artifacts/**/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-debian:
    name: Build (Debian)
    runs-on: ubuntu-latest
    container: debian:stable-slim
    steps:
      - name: Install prerequisites
        run: |
          apt-get update -y
          DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            git ca-certificates python3 python3-venv python3-pip
          update-ca-certificates
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python deps
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install PyInstaller PySide6 mutagen Pillow requests beautifulsoup4 psutil acoustid musicbrainzngs lyricsgenius tqdm tidal-dl-ng
      - name: Build
        run: python3 -m PyInstaller rocksync.spec
      - name: Package
        run: |
          set -euxo pipefail
          test -d dist/RockSync
          TAR_NAME="RockSync-${GITHUB_REF_NAME}-Debian.tar.gz"
          tar -C dist -czf "$TAR_NAME" RockSync
          echo "PACKAGE=$TAR_NAME" >> $GITHUB_ENV
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE }}
          path: ${{ env.PACKAGE }}

  build-fedora:
    name: Build (Fedora)
    runs-on: ubuntu-latest
    container: fedora:latest
    steps:
      - name: Install prerequisites
        run: |
          dnf -y install git ca-certificates python3 python3-pip tar
          update-ca-trust || true
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python deps
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install PyInstaller PySide6 mutagen Pillow requests beautifulsoup4 psutil acoustid musicbrainzngs lyricsgenius tqdm tidal-dl-ng
      - name: Build
        run: python3 -m PyInstaller rocksync.spec
      - name: Package
        run: |
          set -euxo pipefail
          test -d dist/RockSync
          TAR_NAME="RockSync-${GITHUB_REF_NAME}-Fedora.tar.gz"
          tar -C dist -czf "$TAR_NAME" RockSync
          echo "PACKAGE=$TAR_NAME" >> $GITHUB_ENV
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE }}
          path: ${{ env.PACKAGE }}
